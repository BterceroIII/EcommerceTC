@inject ICartService cartService
@implements IDisposable

@inject SweetAlertService Swal;
@inject NavigationManager navManager;
@using Ecommerce.WeAseembly.Extension;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;
@inject AuthenticationStateProvider autenticationProvider;


<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" runat="server" href="#">Ecommerce Demo</a>
        <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Alternar navegación" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="@NavMenuCssClass navbar-collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">

                <AuthorizeView Roles="1">
                    <li class="nav-item" b-test><NavLink class="nav-link" href="dashboard"> Dashboard</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="users"> Usuarios</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="categorys"> Categorias</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="products"> Productos</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="catalog"> Tienda</NavLink></li>
                </AuthorizeView>

            </ul>

            <AuthorizeView>
                <Authorized>
                    <span class="navbar-text me-3">
                        @context.User.Claims.Where(c => c.Type == ClaimTypes.Email ).Select(c => c.Value).SingleOrDefault()
                    </span>
                </Authorized>
            </AuthorizeView>



            <a class="btn btn-outline-dark ms-auto ms-md-0 me-3" href="/cart">
                <i class="bi-cart-fill me-1"></i>
                Cart
                <span class="badge bg-dark text-white ms-1 rounded-pill">@showAmountCart()</span>
            </a>

            <AuthorizeView> 
                <Authorized>
                    <button class="btn btn-outline-dark ms-auto ms-md-0 me-3" type="button" @onclick = "CloseSesion">Salir</button>
                </Authorized>
                <NotAuthorized>
                    <a class="btn btn-outline-dark ms-auto ms-md-0 me-3" href="/login">Iniciar sesion</a>
                </NotAuthorized>
            </AuthorizeView>


        </div>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        cartService.GetItems += StateHasChanged;
    }

    public void Dispose()
    {
        cartService.GetItems -= StateHasChanged;
    }

    private int showAmountCart()
    {
        return cartService.QuantityProduct();
    }

    private async Task CloseSesion()
    {
        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Desea Salir?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si ",
                CancelButtonText = "No",
            });

        if (result.IsConfirmed)
        {
            var autenticationExtern = (AuthenticationExtension)autenticationProvider;
            await autenticationExtern.UpdateStatusAuthentication(null);
            navManager.NavigateTo("/", true);
        }
    }

}
